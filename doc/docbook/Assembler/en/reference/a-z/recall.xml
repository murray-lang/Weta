<?xml version="1.0" encoding="UTF-8"?>
<article xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="en"
        xml:id="asm_recall">
    <?dbhtml dir="a-z" ?>
<sect1>
    <title>RECALL</title>
    <informaltable tabstyle="stack" frame='all' pgwide="0">
        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
            <colspec colname='c1'/>
            <colspec colname='c2'/>
3           <thead>
                <row>
                    <entry namest="c1" nameend="c2">VM Stack</entry>
                </row>
                <row>
                    <entry>Before</entry>
                    <entry>After</entry>
                </row>
            </thead>
             <tbody>
                 <row>
                     <entry morerows="1"/>
                     <entry />

                 </row>
                 <row>
                    <entry><emphasis>value (int16)</emphasis></entry>
                 </row>
            </tbody>
        </tgroup>
    </informaltable>
    <abstract>
       Retrieve the int16 value stored at current location in the internal array and push it onto the stack. Advance the
       data pointer to the next location. The data pointer can be reset to 0 using
        <olink targetptr="asm_resetdp">resetdp</olink>, and set to an explicit location using
        <olink targetptr="asm_setdp">setdp</olink>.
    </abstract>
    <sect2>
        <title>Synopsis</title>
        <funcsynopsis>
            <para><command>recall</command></para>
        </funcsynopsis>
    </sect2>
    <sect2>
        <title>Arguments</title>
        <para>Nil.</para>
    </sect2>
    <sect2>
        <title>Returns</title>
        <para>An int16 value that was previously stored in the internal array.</para>
    </sect2>
    <sect2>
        <title>Example</title>
        <programlisting>
        ...
            ; Record 1 minute's data from sensor1 at 1 second intervals
        resetdp       ; reset the data pointer to 0
        uint16   60   ; repeat count
        block
        sensor1       ; sensor1 value (int16) on the stack
        record        ; store it
        uint16   1000 ; wait 1 second
        wait
        eob
        repeat
        ...
            ; Send the data to the default stream
        resetdp       ; reset the data pointer again for playback
        uint16   60   ; repeat count
        block
        withint16     ; operations on stored data should assume int16
        recall
        tostr         ; that is, int16 to string
        withstring
        send          ; Send the value as a string to the default stream
        send   "\n"   ; one value per line
        eob
        repeat
            ; Keep the data by advancing the data pointer to just past the previous data
        uint16  60    ; new data pointer value
        setdp         ; set it
        ...
        </programlisting>
    </sect2>
    <sect2>
        <title>See Also</title>
        <para>
            <olink targetptr="asm_erase">erase</olink>
            <olink targetptr="asm_record">record</olink>
            <olink targetptr="asm_resetdp">resetdp</olink>
            <olink targetptr="asm_setdp">setdp</olink>
        </para>
    </sect2>
</sect1>
</article>
