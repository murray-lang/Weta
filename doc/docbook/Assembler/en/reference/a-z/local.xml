<?xml version="1.0" encoding="UTF-8"?>
<article xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="en"
        xml:id="asm_local">
    <?dbhtml dir="a-z" ?>
<sect1>
    <title>LOCAL</title>
    <informaltable tabstyle="stack" frame='all' pgwide="0">
        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
            <colspec colname='c1'/>
            <colspec colname='c2'/>
3           <thead>
                <row>
                    <entry namest="c1" nameend="c2">VM Stack</entry>
                </row>
                <row>
                    <entry>Before</entry>
                    <entry>After</entry>
                </row>
            </thead>
             <tbody>
                 <row>
                     <entry morerows="1"/>
                     <entry/>
                 </row>
                <row>
                    <entry><emphasis role="args">variable address</emphasis></entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
    <abstract>
        <para>
        Push the address of the given local variable onto the stack. Currently the assembler only accepts the
        label/name of a local variable.
        </para>
        <para>
        The symbol is resolved by the assembler into an offset from the beginning of the local variable frame on the
        stack for the current procedure. From this the firmware calculates an absolute address, and pushes that onto
        the stack. Thus any subsequent references to the address on the stack need not be concerned about its scope.
        </para>
        <para>
        Note that <olink targetptr="asm_param">param</olink> works in a similar fashion.
        </para>
    </abstract>
    <sect2>
        <title>Synopsis</title>
        <funcsynopsis>
            <para><command>local</command>&#160;&#160;&#160;&#160;<emphasis role="args">&lt;symbol&gt;</emphasis></para>
        </funcsynopsis>
    </sect2>
    <sect2>
        <title>Arguments</title>
            <para><emphasis role="args">&lt;symbol&gt;</emphasis> - name of a local variable</para>

    </sect2>
    <sect2>
        <title>Returns</title>
        <para>Returns a variable address (by virtue of it being pushed onto the stack)</para>
    </sect2>
    <sect2>
        <title>Example</title>
        <programlisting>
            TODO!
        </programlisting>
    </sect2>
    <sect2>
        <title>See Also</title>
        <para>
            <olink targetptr="asm_cptr">cptr</olink>
            <olink targetptr="asm_global">global</olink>
            <olink targetptr="asm_param">param</olink>
        </para>
    </sect2>
</sect1>
</article>
